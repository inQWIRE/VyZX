simpl_casts.
    rewrite stack_wire_distribute_l.
    rewrite stack_wire_distribute_r.
    bundle_wires.
    erewrite <- (@cast_n_wire (n + 1) (S n)).
    rewrite <- ComposeRules.compose_assoc.
    apply compose_simplify_eq; [ | easy].
    erewrite (cast_compose_mid (S (n + S n))).
    rewrite cast_compose_distribute.
    repeat rewrite cast_contract.
    apply compose_simplify_eq; [ | apply cast_simplify_eq; easy].
    simpl_casts.
    rewrite 2 stack_assoc.
    simpl_casts.
    rewrite 3 stack_assoc_back.
    simpl_casts.
------

	rewrite stack_assoc.
	rewrite stack_nwire_distribute_r.
	rewrite (stack_assoc (Z 1 m 0) _ (n_wire (S m))).
	simpl_casts.
	rewrite compose_assoc.
	simpl.
	rewrite (stack_assoc_back (Z 1 1 0) — (n_wire m)).
	simpl_casts.
----- 3
	rewrite <- stack_nwire_distribute_l.
	rewrite stack_assoc_back.
	simpl_casts.
	rewrite <- (stack_compose_distr (— ↕ (Z 1 1 0)) ⊃ (Z 1 m 0)).
	rewrite (stack_empty_r_back ⊃).
	simpl_casts.
	replace ⦰ with (n_wire 0) by easy.
----- 4
  rewrite <- wire_to_n_wire.
  rewrite <- (wire_removal_l —) at 1.
  rewrite <- (wire_removal_l —) at 6.
  rewrite 2 stack_compose_distr.
  rewrite (stack_assoc_back — — (X 1 2 0)).
  rewrite (stack_assoc_back — — (X 2 1 0)).
  simpl_casts.
  bundle_wires.
  rewrite (compose_assoc (— ↕ (⊂ ↕ —))).
  rewrite wire_to_n_wire at 3.
----- 5
 simpl_casts.
  rewrite wire_to_n_wire.
  rewrite stack_nwire_distribute_l.
  rewrite stack_nwire_distribute_r.
  repeat rewrite <- compose_assoc.
  rewrite (compose_assoc _ (Z (1 + 1) 1 0 ↕ (n_wire _) ↕ _)).
  rewrite stack_assoc.
  simpl_casts.
  rewrite n_wire_stack.
---- 6
repeat rewrite stack_wire_distribute_r.
  repeat rewrite compose_assoc.
  rewrite wire_to_n_wire.
  rewrite (stack_assoc (Z 0 1 0) (n_wire 1) (n_wire 1)).
  rewrite (stack_assoc (Z 1 2 0) (n_wire 1) (n_wire 1)).
  rewrite (stack_assoc (X 1 0 0) (n_wire 1) (n_wire 1)).
  rewrite (stack_assoc (X 2 1 0) (n_wire 1) (n_wire 1)).
  simpl_casts.
  rewrite n_wire_stack.
---- 7
 rewrite stack_compose_distr.
  rewrite (stack_assoc_back (X 1 1 _) — —).
  simpl_casts.
  rewrite <- (compose_empty_r (Z 1 0 _)).
  rewrite stack_compose_distr.
  rewrite <- compose_assoc.
  rewrite (stack_assoc (X 1 1 _ ↕ —) — (Z 1 0 _)).
  simpl_casts.
  rewrite <- (stack_compose_distr ⊂ (X 1 1 _ ↕ —) (Z 1 2 0) (— ↕ Z 1 0 _)).
---- 8
rewrite compose_assoc.
  rewrite stack_wire_distribute_l.
  rewrite <- (compose_assoc (⨉ ↕ (— ↕ n_wire n))).
  rewrite stack_assoc_back.
  rewrite (stack_assoc_back — ⨉ (n_wire n)).
  simpl_casts.
  rewrite <- (@stack_nwire_distribute_r _ _ _ n (⨉ ↕ —) (— ↕ ⨉)).
---- 9
  rewrite stack_wire_distribute_l.
    rewrite (stack_assoc_back — —).
    simpl_casts.
    bundle_wires.
    repeat rewrite compose_assoc.
    rewrite <- (compose_assoc (⨉ ↕ n_wire n)).
    rewrite (nwire_stack_compose_botleft ⨉ (n_swap n)).
    rewrite <- (nwire_stack_compose_topleft (n_swap n) ⨉).
    repeat rewrite <- compose_assoc.
---- 10
	rewrite stack_nwire_distribute_r.
	rewrite (stack_assoc — (Z (S input) 1 α) (n_wire bot)).
	simpl_casts.
	rewrite compose_assoc.
	rewrite <- (stack_compose_distr — (Z 1 top 0) (Z (S input) 1 α ↕ n_wire bot)).
	cleanup_zx.
	rewrite wire_to_n_wire.
	rewrite <- compose_assoc.
---- 11
cleanup_zx.
			simpl_casts.
			rewrite (stack_assoc — — _).
			simpl_casts.
			rewrite <- compose_assoc.
			rewrite <- (stack_wire_distribute_l 
				((Z) n (S m) α ⟷ ((Z) 1 2 0 ↕ (m ↑ —))) 
				(— ↕ ((Z) 1 2 0 ↕ n_wire m))).
			rewrite compose_assoc.